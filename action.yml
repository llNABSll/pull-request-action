name: PR - Tests & SonarQube

description: "Run unit tests, generate reports, and perform SonarQube scan"

inputs:
  SONAR_TOKEN:
    description: "SonarQube token"
    required: true
  UNIT_TESTS_COMMAND:
    description: "Run unit tests"
    required: true
  REPORT_PATH:
    description: "Path to the test report"
    required: true

runs:
  using: "composite"

  steps:
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install dependencies
      shell: bash
      run: |
        pip install -r requirements.txt
        pip install coverage
        # install a fast modern linter
        pip install ruff

    - name: Run Python linter (ruff)
      shell: bash
      run: |
        # Run ruff to lint the repository. This step will fail the workflow on lint errors.
        ruff --version || pip install ruff
        ruff check . --extend-exclude tests

    - name: Run unit tests
      shell: bash
      run: ${{ inputs.UNIT_TESTS_COMMAND }}

    - name: Code Coverage Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      continue-on-error: true
      with:
        filename: coverage.xml
        badge: true
        fail_below_min: true
        format: markdown
        hide_branch_rate: false
        hide_complexity: true
        indicators: true
        output: both
        thresholds: "80 90"

    - name: Append coverage markdown to job summary
      if: success()
      shell: bash
      run: |
        if [ -f code-coverage-results.md ]; then
          echo "### Code coverage summary" >> "$GITHUB_STEP_SUMMARY"
          cat code-coverage-results.md >> "$GITHUB_STEP_SUMMARY"
        elif [ -f code-coverage-results.txt ]; then
          echo "### Code coverage summary (text)" >> "$GITHUB_STEP_SUMMARY"
          cat code-coverage-results.txt >> "$GITHUB_STEP_SUMMARY"
        else
          echo "No code coverage summary file found." >> "$GITHUB_STEP_SUMMARY"
        fi

    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: ${{ github.event_name == 'pull_request' && success() }}
      with:
        recreate: true
        path: code-coverage-results.md

    - name: SonarQube Scan
      if: success()
      uses: SonarSource/sonarqube-scan-action@v5
      env:
        SONAR_TOKEN: ${{ inputs.SONAR_TOKEN }}
        SONAR_HOST_URL: https://sonarcloud.io
      with:
        args: >
          -Dsonar.python.coverage.reportPaths=coverage.xml
